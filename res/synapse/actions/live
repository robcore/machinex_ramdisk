UKM=/data/.machinex;
BB=busybox;
DEVICE=/data/.machinex/gs4.sh;

case $1 in
  machinex)
	$BB echo "Machinex"
  ;;
  mark)
	$BB echo "Mark97"
  ;;
  quote)
	if [ -e /system/mi_nr ]; then
		$BB echo "She is gold and nothing less. She makes me fearless <3"
	else
		$BB echo "The wheels keep turning."
	fi
  ;;
  soundcontrol)
	$BB echo "`cat /sys/kernel/sound_control_3/gpl_sound_control_version`"
  ;;
  prometheus)
	$BB echo "`cat /sys/kernel/prometheus/prometheus_version`"
  ;;
  hardplug)
	$BB echo "`cat /sys/kernel/cpu_hardplug/cpu_hardplug_version`"
  ;;
  quote2)
	echo " "
  ;;
  quote3)
	echo " "
  ;;
  stock_scenario)
	$BB echo `cat /sys/devices/virtual/mdnie/mdnie/scenario`
  ;;
  stock_mode)
	$BB echo `cat /sys/devices/virtual/mdnie/mdnie/mode`
  ;;
  entropy)
    $BB echo "`cat /proc/sys/kernel/random/entropy_avail`"
  ;;
  Entropy)
	ET=`$BB cat /proc/sys/kernel/random/entropy_avail 2> /dev/null`
	$BB echo "Current Entropy: $ET"
  ;;
LiveGPUFrequency)
	GPUCURFREQ=/sys/class/kgsl/kgsl-3d0/gpuclk;
	if [ -f "$GPUCURFREQ" ]; then
		GPUFREQ="$((`$BB cat $GPUCURFREQ` / 1000000)) MHz";
		$BB echo "$GPUFREQ";
	else
		$BB echo "-";
	fi;
  ;;
LivePVS)
	PVS=/sys/devices/system/soc/soc0/pvs_bin;
	if [ -f "$PVS" ]; then
		PBIN="$((`$BB cat $PVS`))";
		$BB echo "$PBIN";
	else
		$BB echo "-";
	fi;
  ;;
LiveSPEED)
	SPEED=/sys/devices/system/soc/soc0/speed_bin;
	if [ -f "$SPEED" ]; then
		SBINNING="$((`$BB cat $SPEED`))";
		$BB echo "$SBINNING";
	else
		$BB echo "-";
	fi;
  ;;
LiveCPUTEMP)
	TEMP0=/sys/class/thermal/thermal_zone0/temp;
	TEMP1=/sys/class/thermal/thermal_zone7/temp;
	TEMP2=/sys/class/thermal/thermal_zone8/temp;
	TEMP3=/sys/class/thermal/thermal_zone9/temp;
	TEMP4=/sys/class/thermal/thermal_zone10/temp;

	if [ -f "$TEMP0" ]; then HEAT0="$((`$BB cat $TEMP0`)) °C"; else	HEAT0="unsupported"; fi;
	if [ -f "$TEMP1" ]; then HEAT1="$((`$BB cat $TEMP1`)) °C"; else	HEAT1="unsupported"; fi;
	if [ -f "$TEMP2" ]; then HEAT2="$((`$BB cat $TEMP2`)) °C"; else	HEAT2="unsupported"; fi;
	if [ -f "$TEMP3" ]; then HEAT3="$((`$BB cat $TEMP3`)) °C"; else	HEAT3="unsupported"; fi;
	if [ -f "$TEMP4" ]; then HEAT4="$((`$BB cat $TEMP4`)) °C"; else	HEAT4="unsupported"; fi;

	$BB echo "Board: "$HEAT0"@nCore 0: "$HEAT1"@nCore 1: $HEAT2@nCore 2: $HEAT3@nCore 3: $HEAT4";
  ;;
batttemp)
  $BB echo Battery: $(($(cat /sys/devices/platform/sec-battery/power_supply/battery/temp) / 10))°C
  ;;
batthealth)
  $BB echo Health: `cat /sys/devices/platform/sec-battery/power_supply/battery/health`
  ;;
battcapa)
  $BB echo Capacity: $(($(cat /sys/devices/platform/sec-battery/power_supply/battery/capacity)))
  ;;
battstatus)
  $BB echo Status: `cat /sys/devices/platform/sec-battery/power_supply/battery/status`
  ;;
LiveCPUFrequency)
  CPU0=`$BB cat /sys/devices/system/cpu/cpufreq/policy0/scaling_cur_freq 2> /dev/null`;
  CPU1=`$BB cat /sys/devices/system/cpu/cpufreq/policy1/scaling_cur_freq 2> /dev/null`;
  CPU2=`$BB cat /sys/devices/system/cpu/cpufreq/policy2/scaling_cur_freq 2> /dev/null`;
  CPU3=`$BB cat /sys/devices/system/cpu/cpufreq/policy3/scaling_cur_freq 2> /dev/null`;

  if [ "$CPU0" -gt 0 ]; then CPU0="$((CPU0 / 1000)) MHz"; else CPU0="Offline"; fi;
  if [ "$CPU1" -gt 0 ]; then CPU1="$((CPU1 / 1000)) MHz"; else CPU1="Offline"; fi;
  if [ "$CPU2" -gt 0 ]; then CPU2="$((CPU2 / 1000)) MHz"; else CPU2="Offline"; fi;
  if [ "$CPU3" -gt 0 ]; then CPU3="$((CPU3 / 1000)) MHz"; else CPU3="Offline"; fi;

$BB echo "Core 0: $CPU0@nCore 1: $CPU1@nCore 2: $CPU2@nCore 3: $CPU3";
;;
LiveCPU0Hardlimit)
  MAX=`$BB cat /sys/devices/system/cpu/cpufreq/policy0/current_limit_max 2> /dev/null`;
  MIN=`$BB cat /sys/devices/system/cpu/cpufreq/policy0/current_limit_min 2> /dev/null`;

  MAX="$((MAX / 1000)) MHz";
  MIN="$((MIN / 1000)) MHz";

$BB echo "Current Max: $MAX@nCurrent Min: $MIN";
;;
LiveCPU1Hardlimit)
  MAX=`$BB cat /sys/devices/system/cpu/cpufreq/policy1/current_limit_max 2> /dev/null`;
  MIN=`$BB cat /sys/devices/system/cpu/cpufreq/policy1/current_limit_min 2> /dev/null`;

  MAX="$((MAX / 1000)) MHz";
  MIN="$((MIN / 1000)) MHz";

$BB echo "Current Max: $MAX@nCurrent Min: $MIN";
;;

LiveCPU2Hardlimit)
  MAX=`$BB cat /sys/devices/system/cpu/cpufreq/policy2/current_limit_max 2> /dev/null`;
  MIN=`$BB cat /sys/devices/system/cpu/cpufreq/policy2/current_limit_min 2> /dev/null`;

  MAX="$((MAX / 1000)) MHz";
  MIN="$((MIN / 1000)) MHz";

$BB echo "Current Max: $MAX@nCurrent Min: $MIN";
;;
LiveCPU3Hardlimit)
  MAX=`$BB cat /sys/devices/system/cpu/cpufreq/policy3/current_limit_max 2> /dev/null`;
  MIN=`$BB cat /sys/devices/system/cpu/cpufreq/policy3/current_limit_min 2> /dev/null`;

  MAX="$((MAX / 1000)) MHz";
  MIN="$((MIN / 1000)) MHz";
$BB echo "Current Max: $MAX@nCurrent Min: $MIN";
;;
LiveMemory)
  while read TYPE MEM KB; do
	if [ "$TYPE" = "MemTotal:" ]; then
		TOTAL="$((MEM / 1024)) MB";
	elif [ "$TYPE" = "MemFree:" ]; then
		CACHED=$((MEM / 1024));
	elif [ "$TYPE" = "Cached:" ]; then
		FREE=$((MEM / 1024));
	fi;
  done < /proc/meminfo;

  FREE="$((FREE + CACHED)) MB";
  $BB echo "Total: $TOTAL@nFree: $FREE";
;;
LiveUpTime)
  TOTAL=`$BB awk '{ print $1 }' /proc/uptime`;
  AWAKE=$((`$BB awk '{s+=$2} END {print s}' /sys/devices/system/cpu/cpufreq/policy0/stats/time_in_state` / 100));
  SLEEP=`$BB awk "BEGIN { print ($TOTAL - $AWAKE) }"`;

  PERC_A=`$BB awk "BEGIN { print ( ($AWAKE / $TOTAL) * 100) }"`;
  PERC_A="`$BB printf "%0.1f\n" $PERC_A`%";
  PERC_S=`$BB awk "BEGIN { print ( ($SLEEP / $TOTAL) * 100) }"`;
  PERC_S="`$BB printf "%0.1f\n" $PERC_S`%";

  TOTAL=`$BB echo - | $BB awk -v "S=$TOTAL" '{printf "%dh:%dm:%ds",S/(60*60),S%(60*60)/60,S%60}'`;
  AWAKE=`$BB echo - | $BB awk -v "S=$AWAKE" '{printf "%dh:%dm:%ds",S/(60*60),S%(60*60)/60,S%60}'`;
  SLEEP=`$BB echo - | $BB awk -v "S=$SLEEP" '{printf "%dh:%dm:%ds",S/(60*60),S%(60*60)/60,S%60}'`;
  $BB echo "Total: $TOTAL (100.0%)@nSleep: $SLEEP ($PERC_S)@nAwake: $AWAKE ($PERC_A)";
;;
LiveC0)
  TOTAL=`$BB awk '{ print $1 }' /sys/devices/system/cpu/cpu0/cpuidle/state0/time`;
  TOTAL=`$BB echo - | $BB awk -v "S=$TOTAL" '{printf "%dh:%dm:%ds",S/(3600000000),S/(60000000)%60,S/(1000000)%60}'`;
  $BB echo "Time In Idle: $TOTAL";
;;
LiveC1)
  TOTAL=`$BB awk '{ print $1 }' /sys/devices/system/cpu/cpu1/cpuidle/state0/time`;
  TOTAL=`$BB echo - | $BB awk -v "S=$TOTAL" '{printf "%dh:%dm:%ds",S/(3600000000),S/(60000000)%60,S/(1000000)%60}'`;
  $BB echo "Time In Idle: $TOTAL";
;;
LiveC2)
  TOTAL=`$BB awk '{ print $1 }' /sys/devices/system/cpu/cpu2/cpuidle/state0/time`;
  TOTAL=`$BB echo - | $BB awk -v "S=$TOTAL" '{printf "%dh:%dm:%ds",S/(3600000000),S/(60000000)%60,S/(1000000)%60}'`;
  $BB echo "Time In Idle: $TOTAL";
;;
LiveC3)
  TOTAL=`$BB awk '{ print $1 }' /sys/devices/system/cpu/cpu3/cpuidle/state0/time`;
  TOTAL=`$BB echo - | $BB awk -v "S=$TOTAL" '{printf "%dh:%dm:%ds",S/(3600000000),S/(60000000)%60,S/(1000000)%60}'`;
  $BB echo "Time In Idle: $TOTAL";
;;
LiveWIFI)
  echo `cat /sys/module/dhd/parameters/info_string`;
;;
LiveUnUsed)
  UNUSED="";
  while read FREQ TIME; do
	FREQ="$((FREQ / 1000)) MHz";
	if [ $TIME -lt "100" ]; then
		UNUSED="$UNUSED$FREQ, ";
	fi;
  done < /sys/devices/system/cpu/cpu0/cpufreq/stats/time_in_state;

  UNUSED=${UNUSED%??};
  $BB echo "$UNUSED";
;;
esac;
